//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>
#import "{{ prefix }}BasedViewController.h"

#ifndef {{ prefix }}{{ module_info.name }}Module_h
#define {{ prefix }}{{ module_info.name }}Module_h

@protocol {{ prefix }}{{ module_info.name }}WireframeProtocol;
@protocol {{ prefix }}{{ module_info.name }}ViewProtocol;
@protocol {{ prefix }}{{ module_info.name }}PresenterProtocol;
@protocol {{ prefix }}{{ module_info.name }}ViewPresenterProtocol;
@protocol {{ prefix }}{{ module_info.name }}WireframePresenterProtocol;
@protocol {{ prefix }}{{ module_info.name }}InteractorPresenterProtocol;
@protocol {{ prefix }}{{ module_info.name }}InteractorProtocol;
@protocol {{ prefix }}{{ module_info.name }}ViewModelProtocol;


#pragma mark - Wireframe Protocol
@protocol {{ prefix }}{{ module_info.name }}WireframeProtocol <NSObject>

@property (nonatomic, weak) {{ prefix }}BasedViewController *view;
@property (nonatomic, weak) id<{{ prefix }}{{ module_info.name }}WireframePresenterProtocol> presenter;

#pragma mark + initialize module
- (UIViewController *)initializeModule;

#pragma mark + methods to install module to other modules
// - (void)someMethod;

#pragma mark + methods for presenter to call
// - (void)someMethod;

@end


#pragma mark - View Protocol
@protocol {{ prefix }}{{ module_info.name }}ViewProtocol <NSObject>

@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}ViewPresenterProtocol> presenter;

#pragma mark + methods for presenter to call
// - (void)someMethod;

@end


#pragma mark - Presenter Protocols
#pragma mark + Main Presenter Protocol
@protocol {{ prefix }}{{ module_info.name }}PresenterProtocol <{{ prefix }}{{ module_info.name }}ViewPresenterProtocol, {{ prefix }}{{ module_info.name }}WireframePresenterProtocol, {{ prefix }}{{ module_info.name }}InteractorPresenterProtocol>

@property (nonatomic, weak) {{ prefix }}BasedViewController<{{ prefix }}{{ module_info.name }}ViewProtocol> *view;
@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}WireframeProtocol> wireframe;
@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}InteractorProtocol> interactor;

#pragma mark + initialize
- (instancetype)initWithView:(UIViewController<{{ prefix }}{{ module_info.name }}ViewProtocol> *)view
                   wireframe:(id<{{ prefix }}{{ module_info.name }}WireframeProtocol>)wireframe
                  interactor:(id<{{ prefix }}{{ module_info.name }}InteractorProtocol>)interactor
                   viewModel:(id<{{ prefix }}{{ module_info.name }}ViewModelProtocol>)viewModel;

@end


#pragma mark + View -> Presenter Protocol
@protocol {{ prefix }}{{ module_info.name }}ViewPresenterProtocol <NSObject>

@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}ViewModelProtocol> viewModel;

- (void)viewDidLoad;

@end


#pragma mark + Wireframe -> Presenter Protocol
@protocol {{ prefix }}{{ module_info.name }}WireframePresenterProtocol <NSObject>

// - (void)someMethod;

@end


#pragma mark + Interactor -> Presenter Protocol
@protocol {{ prefix }}{{ module_info.name }}InteractorPresenterProtocol <NSObject>

// - (void)someMethod;

@end


#pragma mark - Interactor Protocol
@protocol {{ prefix }}{{ module_info.name }}InteractorProtocol <NSObject>

@property (nonatomic, weak) id<{{ prefix }}{{ module_info.name }}InteractorPresenterProtocol> presenter;

#pragma mark + methods for presenter to call
// - (void)someMethod;

@end


#pragma mark - View Model Protocol
@protocol {{ prefix }}{{ module_info.name }}ViewModelProtocol <NSObject>

#pragma mark + init and reload data
// - (void)someMethod;

#pragma mark + properties
//@property (nonatomic, strong) NSString *someProperties;

@end

#endif /* {{ prefix }}{{ module_info.name }}Module_h */
