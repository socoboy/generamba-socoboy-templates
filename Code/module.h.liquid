//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright Â© {{ year }} {{ developer.company }}. All rights reserved.
//

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

#ifndef {{ prefix }}{{ module_info.name }}Module_h
#define {{ prefix }}{{ module_info.name }}Module_h

@protocol {{ prefix }}{{ module_info.name }}Wireframe;
@protocol {{ prefix }}{{ module_info.name }}Presenter;
@protocol {{ prefix }}{{ module_info.name }}View;
@protocol {{ prefix }}{{ module_info.name }}Interactor;
@protocol {{ prefix }}{{ module_info.name }}ViewModel;


#pragma mark - View protocol
@protocol {{ prefix }}{{ module_info.name }}View <NSObject>

@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}Presenter> presenter;

// Methods for presenter to call

@end


#pragma mark - Presenter protocol
@protocol {{ prefix }}{{ module_info.name }}Presenter <NSObject>

@property (nonatomic, weak) UIViewController<{{ prefix }}{{ module_info.name }}View> *view;
@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}Wireframe> wireframe;
@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}Interactor> interactor;
@property (nonatomic, strong) id<{{ prefix }}{{ module_info.name }}ViewModel> viewModel;

// Initialize
- (instancetype)initWithView:(UIViewController<{{ prefix }}{{ module_info.name }}View> *)view
                   wireframe:(id<{{ prefix }}{{ module_info.name }}Wireframe>)wireframe
                  interactor:(id<{{ prefix }}{{ module_info.name }}Interactor>)interactor
                   viewModel:(id<{{ prefix }}{{ module_info.name }}ViewModel>)viewModel;

// Methods for View to call
- (void)viewDidLoad;

// Methods for Interactor to call

@end


#pragma mark - Wireframe protocol
@protocol {{ prefix }}{{ module_info.name }}Wireframe <NSObject>

@property (nonatomic, weak) UIViewController *view;
@property (nonatomic, weak) id<{{ prefix }}{{ module_info.name }}Presenter> presenter;

// Initialize module
- (UIViewController *)initializeModule;

// Methods to install module to other modules

// Methods for presenter to call

@end


#pragma mark - Interactor protocol
@protocol {{ prefix }}{{ module_info.name }}Interactor <NSObject>

@property (nonatomic, weak) id<{{ prefix }}{{ module_info.name }}Presenter> presenter;

// Methods for presenter to call

@end


#pragma mark - View Model protocol
@protocol {{ prefix }}{{ module_info.name }}ViewModel <NSObject>

@end

#endif /* {{ prefix }}{{ module_info.name }}Module_h */
